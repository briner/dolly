#!/bin/bash
#
# this script helps people managing oracle DB at UNIGE easily manage their 
# backup. It is not intended to be used outside of UNIGE
#
# doc:
# extglob :
#  - http://stackoverflow.com/questions/216995/how-can-i-use-inverse-or-negative-wildcards-when-pattern-matching-in-a-unix-linu
#  - http://www.linuxjournal.com/content/bash-extended-globbing

shopt -s extglob

EMAIL_DEST="unix-bot@unige.ch,dba-dinf@unige.ch"

EXCLUDE_PATH_GENERATED=/opt/tivoli/tsm/client/ba/bin/exclude_extra_4_db_node
ZFS_MOUNTPOINT_NO_DOLLY_PATH=/var/run/mountpoint_nodolly
#
# is there some new ZFS to take in account
tmp_mountpoint_nodolly=$(mktemp -p /tmp $(basename ${ZFS_MOUNTPOINT_NO_DOLLY_PATH})-4-cron-generate_exclude_extra_4_db_node.XXXXXX)
tmp_gdiff=$(mktemp -p /tmp gdiff-4-cron-generate_exclude_extra_4_db_node.XXXXXX)
#
#   -1- take the ZFS not created by dolly
#   -2- remove the snapshots
#   -4- keep the one wich are mounted
#   -6- find their mountpoint
zfs get -H ch.unige:created_by | ggrep -vP "\tdolly\t" | cut -f1 \
 | grep -v "@" \
 | gxargs --no-run-if-empty zfs get -H mounted | ggrep -P "\tyes\t" | cut -f1 \
 | gxargs --no-run-if-empty zfs get -H mountpoint | cut -f3 >  ${tmp_mountpoint_nodolly}

if ! gdiff ${ZFS_MOUNTPOINT_NO_DOLLY_PATH} ${tmp_mountpoint_nodolly} > ${tmp_gdiff} 2>&1
then
    #
    # rotate mountpoint_nodolly and push the new one 
    mv ${ZFS_MOUNTPOINT_NO_DOLLY_PATH} ${ZFS_MOUNTPOINT_NO_DOLLY_PATH}.$(date "+%Y.%m.%d_%H:%M:%S")
    for f in $(ls -rt1 ${ZFS_MOUNTPOINT_NO_DOLLY_PATH}.* |gtail +10) ; do rm $f ; done
    mv ${tmp_mountpoint_nodolly} ${ZFS_MOUNTPOINT_NO_DOLLY_PATH}
    #
    # rotate the exclude_dolly and generate the new one
    mv ${EXCLUDE_PATH_GENERATED} ${EXCLUDE_PATH_GENERATED}.$(date "+%Y.%m.%d_%H:%M:%S")
    for f in $(ls -rt1 ${EXCLUDE_PATH_GENERATED}.*  |gtail +10); do rm $f ; done
    {
        echo "*"
        echo "* exclude the mountpoint in /oracle except the /oracle/app"
        cat ${ZFS_MOUNTPOINT_NO_DOLLY_PATH} \
        | ggrep -E "($(echo /oracle/!(app) | tr -s " " "|"))" \
        | sed "s|^|exclude.fs |"
        echo "*"
        echo "* exclude every possible mountpoint behind a dolly"
        for mountpoint in $(ls -1 /oracle/  | grep -v app) ; do
            echo "* - for dolly(/dolly/${mountpoint})"
            cat ${ZFS_MOUNTPOINT_NO_DOLLY_PATH} | sed "s|^|exclude.fs /dolly/${mountpoint}|"
        done
    } > ${EXCLUDE_PATH_GENERATED}
    #
    # send messages
    tmp_mail=$(mktemp -p /tmp mail-4-cron-generate_exclude_extra_4_db_node.XXXXXX)
    cat << EOF > ${tmp_mail}
zfs list as changed, so we have to reflect the change on how the backup is
configured.

We've created the new ${EXCLUDE_PATH_GENERATED} which is somehow included in a dsm.sys

output of the gdiff ${ZFS_MOUNTPOINT_NO_DOLLY_PATH} ${tmp_mountpoint_nodolly}
EOF
    cat ${tmp_gdiff} >> ${tmp_mail}
    cat ${tmp_mail} | gsed "s|^|  |" | mailx -s "[$(hostname| cut -d '.' -f1)] $(basename $0): zfs list as changed" $EMAIL_DEST
    rm ${tmp_mail}
else
    rm ${tmp_mountpoint_nodolly}
fi
rm ${tmp_gdiff}
